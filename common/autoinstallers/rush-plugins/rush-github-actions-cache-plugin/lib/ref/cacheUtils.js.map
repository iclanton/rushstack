{"version":3,"file":"cacheUtils.js","sourceRoot":"","sources":["../../src/ref/cacheUtils.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport * as core from '@actions/core'\nimport * as exec from '@actions/exec'\nimport * as glob from '@actions/glob'\nimport * as io from '@actions/io'\nimport * as fs from 'fs'\nimport * as path from 'path'\nimport * as semver from 'semver'\nimport * as util from 'util'\nimport {v4 as uuidV4} from 'uuid'\nimport {\n  CacheFilename,\n  CompressionMethod,\n  GnuTarPathOnWindows\n} from './constants'\n\n// From https://github.com/actions/toolkit/blob/main/packages/tool-cache/src/tool-cache.ts#L23\nexport async function createTempDirectory(): Promise<string> {\n  const IS_WINDOWS = process.platform === 'win32'\n\n  let tempDirectory: string = process.env['RUNNER_TEMP'] || ''\n\n  if (!tempDirectory) {\n    let baseLocation: string\n    if (IS_WINDOWS) {\n      // On Windows use the USERPROFILE env variable\n      baseLocation = process.env['USERPROFILE'] || 'C:\\\\'\n    } else {\n      if (process.platform === 'darwin') {\n        baseLocation = '/Users'\n      } else {\n        baseLocation = '/home'\n      }\n    }\n    tempDirectory = path.join(baseLocation, 'actions', 'temp')\n  }\n\n  const dest = path.join(tempDirectory, uuidV4())\n  await io.mkdirP(dest)\n  return dest\n}\n\nexport function getArchiveFileSizeInBytes(filePath: string): number {\n  return fs.statSync(filePath).size\n}\n\nexport async function resolvePaths(patterns: string[]): Promise<string[]> {\n  const paths: string[] = []\n  const workspace = process.env['GITHUB_WORKSPACE'] ?? process.cwd()\n  const globber = await glob.create(patterns.join('\\n'), {\n    implicitDescendants: false\n  })\n\n  for await (const file of globber.globGenerator()) {\n    const relativeFile = path\n      .relative(workspace, file)\n      .replace(new RegExp(`\\\\${path.sep}`, 'g'), '/')\n    core.debug(`Matched: ${relativeFile}`)\n    // Paths are made relative so the tar entries are all relative to the root of the workspace.\n    if (relativeFile === '') {\n      // path.relative returns empty string if workspace and file are equal\n      paths.push('.')\n    } else {\n      paths.push(`${relativeFile}`)\n    }\n  }\n\n  return paths\n}\n\nexport async function unlinkFile(filePath: fs.PathLike): Promise<void> {\n  return util.promisify(fs.unlink)(filePath)\n}\n\nasync function getVersion(\n  app: string,\n  additionalArgs: string[] = []\n): Promise<string> {\n  let versionOutput = ''\n  additionalArgs.push('--version')\n  core.debug(`Checking ${app} ${additionalArgs.join(' ')}`)\n  try {\n    await exec.exec(`${app}`, additionalArgs, {\n      ignoreReturnCode: true,\n      silent: true,\n      listeners: {\n        stdout: (data: Buffer): string => (versionOutput += data.toString()),\n        stderr: (data: Buffer): string => (versionOutput += data.toString())\n      }\n    })\n  } catch (err) {\n    core.debug(err.message)\n  }\n\n  versionOutput = versionOutput.trim()\n  core.debug(versionOutput)\n  return versionOutput\n}\n\n// Use zstandard if possible to maximize cache performance\nexport async function getCompressionMethod(): Promise<CompressionMethod> {\n  const versionOutput = await getVersion('zstd', ['--quiet'])\n  const version = semver.clean(versionOutput)\n  core.debug(`zstd version: ${version}`)\n\n  if (versionOutput === '') {\n    return CompressionMethod.Gzip\n  } else {\n    return CompressionMethod.ZstdWithoutLong\n  }\n}\n\nexport function getCacheFileName(compressionMethod: CompressionMethod): string {\n  return compressionMethod === CompressionMethod.Gzip\n    ? CacheFilename.Gzip\n    : CacheFilename.Zstd\n}\n\nexport async function getGnuTarPathOnWindows(): Promise<string> {\n  if (fs.existsSync(GnuTarPathOnWindows)) {\n    return GnuTarPathOnWindows\n  }\n  const versionOutput = await getVersion('tar')\n  return versionOutput.toLowerCase().includes('gnu tar') ? io.which('tar') : ''\n}\n\nexport function assertDefined<T>(name: string, value?: T): T {\n  if (value === undefined) {\n    throw Error(`Expected ${name} but value was undefiend`)\n  }\n\n  return value\n}\n\nexport function isGhes(): boolean {\n  const ghUrl = new URL(\n    process.env['GITHUB_SERVER_URL'] || 'https://github.com'\n  )\n\n  const hostname = ghUrl.hostname.trimEnd().toUpperCase()\n  const isGitHubHost = hostname === 'GITHUB.COM'\n  const isGheHost =\n    hostname.endsWith('.GHE.COM') || hostname.endsWith('.GHE.LOCALHOST')\n\n  return !isGitHubHost && !isGheHost\n}\n"]}